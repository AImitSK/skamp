{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(for file in \"C:\\Skamp\\skamp\\docs\\projects\\folders\\README.md\" \"C:\\Skamp\\skamp\\docs\\projects\\folders\\api\\README.md\" \"C:\\Skamp\\skamp\\docs\\projects\\folders\\api\\media-folders-service.md\" \"C:\\Skamp\\skamp\\docs\\projects\\folders\\components\\README.md\" \"C:\\Skamp\\skamp\\docs\\projects\\folders\\adr\\README.md\")",
      "Bash(done)",
      "Bash(git push origin main)",
      "Bash(npm test -- --testPathPattern=\"folders\" --passWithNoTests)",
      "Bash(git commit -m \"$(cat <<''EOF''\ndocs: E2E-Test Probleme dokumentiert + Lösungen\n\nAnalyse-Ergebnis: Alle 11 E2E-Tests fehlgeschlagen\nHauptproblem: Falsche Login-Route und Selektoren\n\nErstellte Dateien:\n- e2e/FIXME.md - Vollständige Problemdokumentation\n- e2e/auth-helper.ts - Shared Login-Helper\n- e2e/crm-company-contact-creation-FIXED.spec.ts - Korrigierter Beispiel-Test\n\nProbleme identifiziert:\n❌ Tests erwarten /login → App hat Login unter /\n❌ Tests verwenden [name=\"email\"] → Korrekt ist #email\n❌ Tests verwenden [name=\"password\"] → Korrekt ist #password\n\nNächste Schritte (dokumentiert in FIXME.md):\n1. Test-User in Firebase erstellen (test@example.com)\n2. Alle *.spec.ts mit auth-helper korrigieren\n3. CRM-Routen verifizieren\n4. Tests erneut ausführen\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git add e2e/communication-*.spec.ts docs/planning/shared/communication-components-refactoring/04-testing-dokumentation.md)",
      "Bash(git checkout:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(npx eslint:*)",
      "Bash(test:*)",
      "Bash(npm test:*)",
      "Bash(npm run test:coverage:*)",
      "Bash(npx tsc:*)",
      "Bash(npm run build:*)",
      "Bash(npm run type-check:*)",
      "Bash(git add \"C:\\Users\\skuehne\\Desktop\\Projekt\\skamp\\src\\app\\dashboard\\projects\\[projectId]\\page.backup.tsx\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nchore: Phase 0 - Setup & Backup für Project Detail Page Refactoring\n\n- Feature-Branch erstellt: feature/project-detail-page-refactoring\n- Backup page.tsx erstellt (1.319 Zeilen)\n- Ist-Zustand: 1 Datei, 1.319 Zeilen Code\n- Toast-Service bereits integriert ✅\n- Admin SDK nicht nötig (Security Rules reichen) ✅\n\nHinweis: Ursprünglich 1.412 Zeilen, durch Toast-Integration \nbereits auf 1.319 Zeilen reduziert (-93 Zeilen)\n\nBereit für Phase 0.5 (Pre-Refactoring Cleanup)\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "WebFetch(domain:genkit.dev)",
      "Bash(for:*)",
      "Bash(do echo \"$file:\")",
      "Bash(find:*)",
      "Bash(git merge feature/communication-components-refactoring-production --no-ff -m \"$(cat <<''EOF''\nmerge: Genkit Migration für PR-Generierung (Strukturiert + Einfach)\n\nFeature Branch: feature/communication-components-refactoring-production\nCommits: 167062bb, 448f5e53\n\nZUSAMMENFASSUNG DER MIGRATION:\n\nNeue Dateien:\n✅ src/lib/ai/schemas/press-release-structured-schemas.ts (74 Zeilen)\n✅ src/lib/ai/flows/generate-press-release-structured.ts (680 Zeilen)\n\nModifizierte Dateien:\n✅ src/app/api/ai/generate-structured/route.ts (732 → 120 Zeilen, -84%)\n✅ src/app/api/ai/generate/route.ts (mode Default-Fix)\n✅ src/genkit-server.ts (Flow Export)\n\nFeatures:\n- Strukturierte PR-Generierung auf Genkit migriert\n- Vollständige Prompt Library integriert (700+ Zeilen)\n- 7 Industry-Prompts, 4 Tone-Prompts, 3 Audience-Prompts\n- PR-SEO Score Optimierung (85-95% Target)\n- Dokumenten-Kontext Support (bis zu 3 Dateien, 15k chars)\n- Verbessertes Quote-Parsing (aus Body-Paragraphen)\n\nBug Fixes:\n- maxOutputTokens: 2048 → 8192 (Gemini Extended Thinking)\n- Default mode=''generate'' für Abwärtskompatibilität\n\nProduction-Tests: ✅ Erfolgreich\nCode-Reduktion: -612 Zeilen (-84%)\n\n🤖 Generated with Claude Code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(npm run genkit:dev)",
      "mcp__genkit__run_flow",
      "mcp__genkit__lookup_genkit_docs",
      "Bash(genkit eval:flow generateHeadlines --input src/lib/ai/test-data/generate-headlines-dataset.json)",
      "mcp__genkit__get_trace",
      "mcp__genkit__list_flows",
      "Bash(git push)",
      "Bash(npm install:*)",
      "Bash(git log:*)"
    ],
    "deny": [],
    "ask": [],
    "defaultMode": "acceptEdits"
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "genkit"
  ]
}
