rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ========================================
    // GLOBALE JOURNALISTEN (Neue Reference-System Rules)
    // ========================================

    // Globale Kontakte - READ/WRITE für authentifizierte User + Cron Jobs
    match /contacts_enhanced/{contactId} {
      // LESEN & SCHREIBEN: Auth users + Cron Jobs (für Auto-Import)
      allow read, write: if true;
    }

    // ========================================
    // JOURNALIST REFERENCES (Neue Collection)
    // ========================================

    // References werden in der Organisation des Kunden gespeichert
    match /organizations/{orgId}/journalist_references/{referenceId} {
      // READ & WRITE: Komplett offen für Cron Jobs (Auto-Import)
      allow read, write: if true;
    }

    // ========================================
    // DEFAULT FALLBACK
    // ========================================

    // Fallback für andere Collections
    // WICHTIG: Nur für authentifizierte User
    match /{document=**} {
      allow read, write: if request.auth != null;
    }

    // ========================================
    // MATCHING CANDIDATES (SuperAdmin Only)
    // ========================================

    // Matching-Kandidaten - Komplett offen für Cron Jobs
    match /matching_candidates/{candidateId} {
      // READ & WRITE: KOMPLETT OFFEN (für Cron Jobs ohne Auth)
      allow read, write: if true;
    }

    // Matching Scan-Jobs - Komplett offen für Cron Jobs
    match /matching_scan_jobs/{jobId} {
      // READ & WRITE: KOMPLETT OFFEN (für Cron Jobs ohne Auth)
      allow read, write: if true;
    }

    // ========================================
    // BESTEHENDE RULES (Erweitert für bessere Sicherheit)
    // ========================================

    // Organizations - KOMPLETT OFFEN für Cron Jobs
    match /organizations/{orgId}/{document=**} {
      allow read, write: if true;
    }

    // Publikationen in der Bibliothek - Für Matching System + Cron Jobs
    match /publications/{pubId} {
      allow read, write: if true;
    }

    // SuperAdmin Publications - Für Matching System + Cron Jobs
    match /superadmin_publications/{pubId} {
      allow read, write: if true;
    }

    // Companies Enhanced - Für Matching System + Cron Jobs
    match /companies_enhanced/{companyId} {
      allow read, write: if true;
    }

    // System Settings - Für Auto-Import Settings
    match /system_settings/{docId} {
      allow read: if true;
      // WRITE: Auth users + Cron Jobs (für lastRun Updates)
      allow write: if true;
    }

    // ========================================
    // VALIDATION FUNCTIONS
    // ========================================

    // Prüft ob User SuperAdmin ist
    function isSuperAdmin() {
      return request.auth.token.organizationId == "superadmin-org"
             || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'super_admin';
    }

    // Validiert das Erstellen einer Reference
    function validateReferenceCreate(data) {
      return data.keys().hasAll(['organizationId', 'globalJournalistId', 'addedAt', 'addedBy', 'isActive'])
             && data.organizationId is string
             && data.globalJournalistId is string
             && data.addedBy is string
             && data.isActive == true
             && (!('localNotes' in data) || data.localNotes is string)
             && (!('localTags' in data) || data.localTags is list);
    }

    // Validiert das Update einer Reference (nur lokale Daten)
    function validateReferenceUpdate(before, after) {
      return // Unveränderliche Felder
             after.organizationId == before.organizationId
             && after.globalJournalistId == before.globalJournalistId
             && after.addedAt == before.addedAt
             && after.addedBy == before.addedBy
             // Nur lokale Felder dürfen geändert werden
             && (!('localNotes' in after) || after.localNotes is string)
             && (!('localTags' in after) || after.localTags is list)
             && (!('customLabel' in after) || after.customLabel is string);
    }
  }
}