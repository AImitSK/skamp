rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ========================================
    // GLOBALE JOURNALISTEN (Neue Reference-System Rules)
    // ========================================

    // Globale Kontakte - READ für alle, WRITE für eigene Org + Cron Jobs
    match /contacts_enhanced/{contactId} {
      // LESEN: Alle authentifizierten User + Cron Jobs
      allow read: if request.auth != null || request.auth == null;

      // SCHREIBEN: Auth users + Cron Jobs (für Auto-Import)
      allow write: if request.auth != null || request.auth == null;
    }

    // ========================================
    // JOURNALIST REFERENCES (Neue Collection)
    // ========================================

    // References werden in der Organisation des Kunden gespeichert
    match /organizations/{orgId}/journalist_references/{referenceId} {
      // LESEN: Nur Mitglieder der Organisation
      allow read: if request.auth != null
                  && request.auth.token.organizationId == orgId;

      // ERSTELLEN: Nur Mitglieder der Organisation
      allow create: if request.auth != null
                    && request.auth.token.organizationId == orgId
                    && validateReferenceCreate(request.resource.data);

      // AKTUALISIEREN: Nur lokale Daten (Notes, Tags)
      allow update: if request.auth != null
                    && request.auth.token.organizationId == orgId
                    && validateReferenceUpdate(resource.data, request.resource.data);

      // LÖSCHEN: Nur eigene References
      allow delete: if request.auth != null
                    && request.auth.token.organizationId == orgId;
    }

    // ========================================
    // DEFAULT FALLBACK (MUSS GANZ OBEN STEHEN!)
    // ========================================

    // Fallback für andere Collections (temporär permissiv für Development)
    // WICHTIG: Diese Rule steht OBEN, damit spezifische Rules sie überschreiben können!
    match /{document=**} {
      allow read, write: if request.auth != null;
    }

    // ========================================
    // MATCHING CANDIDATES (SuperAdmin Only)
    // ========================================

    // Matching-Kandidaten - SuperAdmin + Cron Jobs
    match /matching_candidates/{candidateId} {
      // Lesen: Nur SuperAdmin
      allow read: if request.auth != null && isSuperAdmin();
      // Schreiben: SuperAdmin ODER unauthenticated (für Cron Jobs)
      allow write: if (request.auth != null && isSuperAdmin()) || request.auth == null;
    }

    // Matching Scan-Jobs - SuperAdmin + Cron Jobs
    match /matching_scan_jobs/{jobId} {
      // Lesen: Nur SuperAdmin
      allow read: if request.auth != null && isSuperAdmin();
      // Schreiben: SuperAdmin ODER unauthenticated (für Cron Jobs)
      allow write: if (request.auth != null && isSuperAdmin()) || request.auth == null;
    }

    // ========================================
    // BESTEHENDE RULES (Erweitert für bessere Sicherheit)
    // ========================================

    // Organizations - Root Collection (für Development offen + Cron Jobs)
    match /organizations/{orgId} {
      allow read: if request.auth != null || request.auth == null; // Cron Jobs brauchen Read
      allow write: if request.auth != null;
    }

    // Organisations-spezifische Sub-Collections
    match /organizations/{orgId}/{collection}/{docId} {
      // READ: Auth users von der Org + Cron Jobs (für Scan)
      allow read: if (request.auth != null && request.auth.token.organizationId == orgId)
                  || request.auth == null;
      // WRITE: Nur Auth users von der Org
      allow write: if request.auth != null
                   && request.auth.token.organizationId == orgId;
    }

    // Publikationen in der Bibliothek - Globale Sichtbarkeit für SuperAdmin-Publikationen
    match /publications/{pubId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }

    // SuperAdmin Publications - Für Matching System
    match /superadmin_publications/{pubId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }

    // Companies Enhanced - Für Matching System
    match /companies_enhanced/{companyId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }

    // ========================================
    // VALIDATION FUNCTIONS
    // ========================================

    // Prüft ob User SuperAdmin ist
    function isSuperAdmin() {
      return request.auth.token.organizationId == "superadmin-org"
             || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'super_admin';
    }

    // Validiert das Erstellen einer Reference
    function validateReferenceCreate(data) {
      return data.keys().hasAll(['organizationId', 'globalJournalistId', 'addedAt', 'addedBy', 'isActive'])
             && data.organizationId is string
             && data.globalJournalistId is string
             && data.addedBy is string
             && data.isActive == true
             && (!('localNotes' in data) || data.localNotes is string)
             && (!('localTags' in data) || data.localTags is list);
    }

    // Validiert das Update einer Reference (nur lokale Daten)
    function validateReferenceUpdate(before, after) {
      return // Unveränderliche Felder
             after.organizationId == before.organizationId
             && after.globalJournalistId == before.globalJournalistId
             && after.addedAt == before.addedAt
             && after.addedBy == before.addedBy
             // Nur lokale Felder dürfen geändert werden
             && (!('localNotes' in after) || after.localNotes is string)
             && (!('localTags' in after) || after.localTags is list)
             && (!('customLabel' in after) || after.customLabel is string);
    }
  }
}